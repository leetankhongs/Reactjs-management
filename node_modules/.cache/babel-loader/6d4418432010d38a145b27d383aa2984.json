{"ast":null,"code":"var _jsxFileName = \"C:\\\\Study\\\\React\\\\management\\\\src\\\\components\\\\TaskItem.js\";\nimport React, { Component } from 'react';\nimport * as actions from './../actions/index';\nimport { connect } from 'react-redux';\n\nclass TaskItem extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.changeStatus = () => {\n      this.props.onUpdateStatus(this.props.task.id);\n    };\n\n    this.deleteTask = () => {\n      this.props.onDeleteTask(this.props.task.id);\n    };\n\n    this.updateItem = () => {\n      this.props.updateItem(this.props.task.id);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }\n    }, this.props.index + 1), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }\n    }, this.props.task.name), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: this.props.task.status === true ? \"label label-danger\" : \"label label-success\",\n      onClick: this.changeStatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }\n    }, this.props.task.status === true ? \"Kích hoạt\" : \"Ẩn\")), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-warning\",\n      onClick: this.updateItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fa fa-pencil mr-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }\n    }), \"\\xA0S\\u1EEDa\"), \"\\xA0\", /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-danger\",\n      onClick: this.deleteTask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fa fa-trash mr-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }\n    }), \"\\xA0X\\xF3a\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onUpdateStatus: id => {\n      dispatch(actions.updateStatus(id));\n    },\n    onDeleteTask: id => {\n      dispatch(actions.deleteTask(id));\n    },\n    onDeleteTask: () => {\n      dispatch(actions.openForm());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskItem);","map":{"version":3,"sources":["C:/Study/React/management/src/components/TaskItem.js"],"names":["React","Component","actions","connect","TaskItem","changeStatus","props","onUpdateStatus","task","id","deleteTask","onDeleteTask","updateItem","render","index","name","status","mapStateToProps","state","mapDispatchToProps","dispatch","updateStatus","openForm"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport * as actions from './../actions/index'\r\nimport {connect} from 'react-redux';\r\n\r\nclass TaskItem extends Component {\r\n\r\n    changeStatus = () => {\r\n        this.props.onUpdateStatus(this.props.task.id);\r\n    }\r\n\r\n    deleteTask = () => {\r\n        this.props.onDeleteTask(this.props.task.id);\r\n    }\r\n\r\n    updateItem = () =>{\r\n        this.props.updateItem(this.props.task.id);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <tr>\r\n                <td>{this.props.index + 1}</td>\r\n                <td>{this.props.task.name}</td>\r\n                <td className=\"text-center\">\r\n\r\n                    <span className={this.props.task.status === true ? \"label label-danger\" : \"label label-success\"} onClick={this.changeStatus}>\r\n                        {this.props.task.status === true ? \"Kích hoạt\" : \"Ẩn\"}\r\n                    </span>\r\n                </td>\r\n                <td className=\"text-center\">\r\n                    <button type=\"button\" className=\"btn btn-warning\" onClick = {this.updateItem}>\r\n                        <span className=\"fa fa-pencil mr-5\"></span>&nbsp;Sửa\r\n                                            </button>\r\n                                            &nbsp;\r\n                                            <button type=\"button\" className=\"btn btn-danger\" onClick={this.deleteTask}>\r\n                        <span className=\"fa fa-trash mr-5\"></span>&nbsp;Xóa\r\n                                            </button>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return{\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) =>{\r\n    return {\r\n        onUpdateStatus: (id)=>{\r\n            dispatch(actions.updateStatus(id));\r\n        },\r\n        onDeleteTask: (id)=>{\r\n            dispatch(actions.deleteTask(id));\r\n        },\r\n        onDeleteTask: ()=>{\r\n            dispatch(actions.openForm());\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(TaskItem);\r\n"]},"metadata":{},"sourceType":"module"}