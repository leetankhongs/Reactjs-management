{"ast":null,"code":"var _jsxFileName = \"C:\\\\Study\\\\React\\\\management\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport TaskForm from './components/TaskForm';\nimport Controll from './components/Controll';\nimport TaskList from './components/TaskList';\nimport { connect } from 'react-redux';\nimport * as actions from './actions/index';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addTask = () => {\n      if (this.props.taskEditing) {\n        this.props.onNullTaskEditing();\n        this.props.onOpenForm();\n      } else {\n        this.props.onToggleForm();\n      }\n    };\n\n    this.filterList = (filterName, filterStatus) => {\n      this.setState({\n        Filter: {\n          Name: filterName.toLowerCase(),\n          Status: filterStatus\n        }\n      });\n    };\n\n    this.searchList = txtSearch => {\n      this.setState({\n        Keyword: txtSearch\n      });\n    };\n\n    this.sortBy = type => {\n      this.setState({\n        Sort: type\n      });\n    };\n\n    this.state = {\n      Filter: {\n        Name: '',\n        Status: -1\n      },\n      Keyword: '',\n      Sort: 0\n    };\n  }\n\n  render() {\n    var {\n      isDisplayForm\n    } = this.props;\n    var {\n      Keyword,\n      Sort\n    } = this.state; // if(Keyword !== \"\"){\n    //     tasks = tasks.filter((task)=>{\n    //         return task.Name.toLowerCase().indexOf(Keyword) !== -1;\n    //     })\n    // }\n    // if(Sort !== 0){\n    //     tasks.sort((a,b)=>{\n    //         if(a.Name.toLowerCase() > b.Name.toLowerCase()) return Sort;\n    //         else if(a.Name.toLowerCase() < b.Name.toLowerCase()) return -Sort;\n    //         else return 0;\n    //     })\n    // }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, \"Qu\\u1EA3n L\\xFD C\\xF4ng Vi\\u1EC7c\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: isDisplayForm === true ? \"col-xs-4 col-sm-4 col-md-4 col-lg-4\" : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TaskForm, {\n      task: this.state.taskEditing,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: isDisplayForm === true ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8\" : \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      onClick: this.addTask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fa fa-plus mr-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 29\n      }\n    }), \"\\xA0Th\\xEAm C\\xF4ng Vi\\u1EC7c\"), \"\\xA0\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-15\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Controll, {\n      searchList: this.searchList,\n      sortBy: this.sortBy,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-15\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TaskList, {\n      changeStatus: this.changeStatus,\n      deleteTask: this.deleteTask,\n      updateItem: this.updateItem,\n      filterList: this.filterList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 33\n      }\n    }))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isDisplayForm: state.isDisplayForm,\n    taskEditing: state.taskEditing\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onToggleForm: () => {\n      dispatch(actions.toggleForm());\n    },\n    onCloseForm: () => {\n      dispatch(actions.closeForm());\n    },\n    onOpenForm: () => {\n      dispatch(actions.openForm());\n    },\n    onNullTaskEditing: () => {\n      dispatch(actions.nullTaskEditing());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/Study/React/management/src/App.js"],"names":["React","Component","TaskForm","Controll","TaskList","connect","actions","App","constructor","props","addTask","taskEditing","onNullTaskEditing","onOpenForm","onToggleForm","filterList","filterName","filterStatus","setState","Filter","Name","toLowerCase","Status","searchList","txtSearch","Keyword","sortBy","type","Sort","state","render","isDisplayForm","changeStatus","deleteTask","updateItem","mapStateToProps","mapDispatchToProps","dispatch","toggleForm","onCloseForm","closeForm","openForm","nullTaskEditing"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css'\nimport TaskForm from './components/TaskForm'\nimport Controll from './components/Controll'\nimport TaskList from './components/TaskList'\nimport { connect } from 'react-redux'\nimport * as actions from './actions/index'\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            Filter: {\n                Name: '',\n                Status: -1\n            },\n            Keyword: '',\n            Sort: 0\n        };\n    }\n\n    addTask = () => {\n\n        if(this.props.taskEditing){\n            this.props.onNullTaskEditing();\n            this.props.onOpenForm();\n        }else{\n            this.props.onToggleForm();\n        }\n    }\n\n\n\n    filterList = (filterName, filterStatus) => {\n        this.setState({\n            Filter: {\n                Name: filterName.toLowerCase(),\n                Status: filterStatus\n            }\n        })\n\n    }\n\n    searchList = (txtSearch) => {\n        this.setState({\n            Keyword: txtSearch\n        })\n    }\n\n    sortBy = (type) => {\n        this.setState({\n            Sort: type\n        })\n    }\n\n    render() {\n        var { isDisplayForm } = this.props;\n        var { Keyword, Sort } = this.state;\n\n\n        // if(Keyword !== \"\"){\n        //     tasks = tasks.filter((task)=>{\n        //         return task.Name.toLowerCase().indexOf(Keyword) !== -1;\n        //     })\n        // }\n\n        // if(Sort !== 0){\n        //     tasks.sort((a,b)=>{\n        //         if(a.Name.toLowerCase() > b.Name.toLowerCase()) return Sort;\n        //         else if(a.Name.toLowerCase() < b.Name.toLowerCase()) return -Sort;\n        //         else return 0;\n        //     })\n        // }\n\n        return (\n            <div className=\"container\">\n                <div className=\"text-center\">\n                    <h1>Quản Lý Công Việc</h1>\n                    <hr />\n                </div>\n                <div className=\"row\">\n                    <div className={isDisplayForm === true ? \"col-xs-4 col-sm-4 col-md-4 col-lg-4\" : \"\"}>\n                        <TaskForm task={this.state.taskEditing} />\n                    </div>\n                    <div className={isDisplayForm === true ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8\" : \"col-xs-12 col-sm-12 col-md-12 col-lg-12\"}>\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={this.addTask}>\n                            <span className=\"fa fa-plus mr-5\"></span>&nbsp;Thêm Công Việc\n                        </button>&nbsp;\n                        <div className=\"row mt-15\">\n                            <Controll searchList={this.searchList} sortBy={this.sortBy} />\n                        </div>\n                        <div className=\"row mt-15\">\n                            <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                                <TaskList\n                                    changeStatus={this.changeStatus}\n                                    deleteTask={this.deleteTask}\n                                    updateItem={this.updateItem}\n                                    filterList={this.filterList} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        isDisplayForm: state.isDisplayForm,\n        taskEditing: state.taskEditing\n    }\n}\n\nconst mapDispatchToProps = (dispatch, props) => {\n    return {\n        onToggleForm: () => {\n            dispatch(actions.toggleForm());\n        },\n        onCloseForm: () => {\n            dispatch(actions.closeForm());\n        },\n        onOpenForm: () =>{\n            dispatch(actions.openForm())\n        },\n        onNullTaskEditing: () =>{\n            dispatch(actions.nullTaskEditing())\n        }\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}