{"ast":null,"code":"import * as types from '../constants/actionType';\nvar initialState = false;\n\nconst UniqueID = () => {\n  return '_' + Math.random().toString(36).substr(2, 9);\n};\n\nvar myReducer = (tasks = initialState, action) => {\n  switch (action.type) {\n    case types.LIST_ALL:\n      return tasks;\n\n    case types.ADD_TASK:\n      {\n        var newTask = {\n          id: UniqueID(),\n          name: action.task.name,\n          status: action.task.status\n        };\n        tasks.push(newTask);\n        localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n        return [...tasks];\n      }\n\n    default:\n      return tasks;\n  }\n};\n\nexport default myReducer;","map":{"version":3,"sources":["C:/Study/React/management/src/reducers/form.js"],"names":["types","initialState","UniqueID","Math","random","toString","substr","myReducer","tasks","action","type","LIST_ALL","ADD_TASK","newTask","id","name","task","status","push","localStorage","setItem","JSON","stringify"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,yBAAvB;AAEA,IAAIC,YAAY,GAAG,KAAnB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACnB,SAAO,MAAMC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,MAA3B,CAAkC,CAAlC,EAAqC,CAArC,CAAb;AACH,CAFD;;AAIA,IAAIC,SAAS,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAgC;AAE5C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKV,KAAK,CAACW,QAAX;AACI,aAAOH,KAAP;;AACJ,SAAKR,KAAK,CAACY,QAAX;AAAoB;AAChB,YAAIC,OAAO,GAAG;AACVC,UAAAA,EAAE,EAAEZ,QAAQ,EADF;AAEVa,UAAAA,IAAI,EAAEN,MAAM,CAACO,IAAP,CAAYD,IAFR;AAGVE,UAAAA,MAAM,EAAER,MAAM,CAACO,IAAP,CAAYC;AAHV,SAAd;AAKAT,QAAAA,KAAK,CAACU,IAAN,CAAWL,OAAX;AACAM,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA6BC,IAAI,CAACC,SAAL,CAAed,KAAf,CAA7B;AACA,eAAO,CAAC,GAAGA,KAAJ,CAAP;AACH;;AACD;AACI,aAAOA,KAAP;AAdR;AAgBH,CAlBD;;AAqBA,eAAeD,SAAf","sourcesContent":["import * as types from '../constants/actionType'\r\n\r\nvar initialState = false;\r\n\r\nconst UniqueID = () => {\r\n    return '_' + Math.random().toString(36).substr(2, 9);\r\n}\r\n\r\nvar myReducer = (tasks = initialState, action)=>{\r\n    \r\n    switch(action.type){\r\n        case types.LIST_ALL:\r\n            return tasks;\r\n        case types.ADD_TASK:{\r\n            var newTask = {\r\n                id: UniqueID(),\r\n                name: action.task.name,\r\n                status: action.task.status\r\n            }\r\n            tasks.push(newTask); \r\n            localStorage.setItem(\"tasks\",JSON.stringify(tasks));\r\n            return [...tasks];\r\n        }\r\n        default:\r\n            return tasks;\r\n    }\r\n}\r\n\r\n\r\nexport default myReducer;"]},"metadata":{},"sourceType":"module"}