{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Study\\\\React\\\\management\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import*as types from'./../constants/actionType';var data=JSON.parse(localStorage.getItem(\"tasks\"));var initialState=data?data:[];var UniqueID=function UniqueID(){return'_'+Math.random().toString(36).substr(2,9);};var myReducer=function myReducer(){var tasks=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case types.LIST_ALL:return tasks;case types.ADD_TASK:{var newTask={id:UniqueID(),name:action.task.name,status:action.task.status};tasks.push(newTask);localStorage.setItem(\"tasks\",JSON.stringify(tasks));return _toConsumableArray(tasks);}default:return tasks;}};export default myReducer;","map":{"version":3,"sources":["C:/Study/React/management/src/reducers/tasks.js"],"names":["types","data","JSON","parse","localStorage","getItem","initialState","UniqueID","Math","random","toString","substr","myReducer","tasks","action","type","LIST_ALL","ADD_TASK","newTask","id","name","task","status","push","setItem","stringify"],"mappings":"gKAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,2BAAvB,CAEA,GAAIC,CAAAA,IAAI,CAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAX,CACA,GAAIC,CAAAA,YAAY,CAAGL,IAAI,CAAEA,IAAF,CAAS,EAAhC,CAEA,GAAMM,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACnB,MAAO,IAAMC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,MAA3B,CAAkC,CAAlC,CAAqC,CAArC,CAAb,CACH,CAFD,CAIA,GAAIC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAgC,IAA/BC,CAAAA,KAA+B,2DAAvBP,YAAuB,IAATQ,CAAAA,MAAS,2CAE5C,OAAOA,MAAM,CAACC,IAAd,EACI,IAAKf,CAAAA,KAAK,CAACgB,QAAX,CACI,MAAOH,CAAAA,KAAP,CACJ,IAAKb,CAAAA,KAAK,CAACiB,QAAX,CAAoB,CAChB,GAAIC,CAAAA,OAAO,CAAG,CACVC,EAAE,CAAEZ,QAAQ,EADF,CAEVa,IAAI,CAAEN,MAAM,CAACO,IAAP,CAAYD,IAFR,CAGVE,MAAM,CAAER,MAAM,CAACO,IAAP,CAAYC,MAHV,CAAd,CAKAT,KAAK,CAACU,IAAN,CAAWL,OAAX,EACAd,YAAY,CAACoB,OAAb,CAAqB,OAArB,CAA6BtB,IAAI,CAACuB,SAAL,CAAeZ,KAAf,CAA7B,EACA,0BAAWA,KAAX,EACH,CACD,QACI,MAAOA,CAAAA,KAAP,CAdR,CAgBH,CAlBD,CAqBA,cAAeD,CAAAA,SAAf","sourcesContent":["import * as types from './../constants/actionType'\r\n\r\nvar data = JSON.parse(localStorage.getItem(\"tasks\"));\r\nvar initialState = data? data : [];\r\n\r\nconst UniqueID = () => {\r\n    return '_' + Math.random().toString(36).substr(2, 9);\r\n}\r\n\r\nvar myReducer = (tasks = initialState, action)=>{\r\n    \r\n    switch(action.type){\r\n        case types.LIST_ALL:\r\n            return tasks;\r\n        case types.ADD_TASK:{\r\n            var newTask = {\r\n                id: UniqueID(),\r\n                name: action.task.name,\r\n                status: action.task.status\r\n            }\r\n            tasks.push(newTask); \r\n            localStorage.setItem(\"tasks\",JSON.stringify(tasks));\r\n            return [...tasks];\r\n        }\r\n        default:\r\n            return tasks;\r\n    }\r\n}\r\n\r\n\r\nexport default myReducer;"]},"metadata":{},"sourceType":"module"}