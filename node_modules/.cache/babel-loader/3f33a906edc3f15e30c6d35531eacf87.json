{"ast":null,"code":"var _jsxFileName = \"C:\\\\Study\\\\React\\\\management\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport TaskForm from './components/TaskForm';\nimport Controll from './components/Controll';\nimport TaskList from './components/TaskList';\nimport { connect } from 'react-redux';\nimport * as actions from './actions/index';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addTask = () => {\n      // if(this.state.taskEditing){\n      //     this.setState({\n      //         isDisplayForm: true,\n      //         taskEditing: null\n      //     })\n      // }else{\n      //     this.setState({\n      //         isDisplayForm: !this.state.isDisplayForm\n      //     })\n      // }\n      this.props.onToggleForm();\n    };\n\n    this.onShowForm = () => {\n      this.setState({\n        isDisplayForm: true\n      });\n    };\n\n    this.changeStatus = ID => {\n      var {\n        tasks\n      } = this.state;\n      var index = this.findTask(ID);\n\n      if (index !== -1) {\n        tasks[index].Status = !tasks[index].Status;\n        this.setState({\n          tasks: tasks\n        });\n        localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n      }\n    };\n\n    this.deleteTask = ID => {\n      var {\n        tasks\n      } = this.state;\n      var index = this.findTask(ID);\n\n      if (index !== -1) {\n        tasks.splice(index, 1);\n        this.setState({\n          tasks: tasks\n        });\n        localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n      }\n    };\n\n    this.findTask = ID => {\n      var {\n        tasks\n      } = this.state;\n      var index = -1;\n\n      for (var i = 0; i < tasks.length; i++) {\n        if (tasks[i].ID === ID) {\n          index = i;\n          break;\n        }\n      }\n\n      return index;\n    };\n\n    this.updateItem = ID => {\n      var {\n        tasks\n      } = this.state;\n      var index = this.findTask(ID);\n\n      if (index !== -1) {\n        this.setState({\n          taskEditing: tasks[index]\n        });\n        this.onShowForm();\n        localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n      }\n    };\n\n    this.filterList = (filterName, filterStatus) => {\n      this.setState({\n        Filter: {\n          Name: filterName.toLowerCase(),\n          Status: filterStatus\n        }\n      });\n    };\n\n    this.searchList = txtSearch => {\n      this.setState({\n        Keyword: txtSearch\n      });\n    };\n\n    this.sortBy = type => {\n      this.setState({\n        Sort: type\n      });\n    };\n\n    this.state = {\n      taskEditing: null,\n      Filter: {\n        Name: '',\n        Status: -1\n      },\n      Keyword: '',\n      Sort: 0\n    };\n  }\n\n  render() {\n    var {\n      isDisplayForm\n    } = this.props;\n    var {\n      Filter,\n      Keyword,\n      Sort\n    } = this.state;\n    var elmTaskForm = isDisplayForm === true ? /*#__PURE__*/React.createElement(TaskForm, {\n      task: this.state.taskEditing,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 52\n      }\n    }) : ''; // if(Filter){\n    //     tasks = tasks.filter((task)=>{\n    //         return task.Name.toLowerCase().indexOf(Filter.Name) !== -1;\n    //     })\n    //     tasks = tasks.filter((task)=>{\n    //         if(Filter.Status == -1)\n    //         {\n    //             return task;\n    //         }\n    //         else{\n    //             return task.Status === (Filter.Status == 1? true: false);\n    //         }\n    //     })\n    // }\n    // if(Keyword !== \"\"){\n    //     tasks = tasks.filter((task)=>{\n    //         return task.Name.toLowerCase().indexOf(Keyword) !== -1;\n    //     })\n    // }\n    // if(Sort !== 0){\n    //     tasks.sort((a,b)=>{\n    //         if(a.Name.toLowerCase() > b.Name.toLowerCase()) return Sort;\n    //         else if(a.Name.toLowerCase() < b.Name.toLowerCase()) return -Sort;\n    //         else return 0;\n    //     })\n    // }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }\n    }, \"Qu\\u1EA3n L\\xFD C\\xF4ng Vi\\u1EC7c\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: isDisplayForm === true ? \"col-xs-4 col-sm-4 col-md-4 col-lg-4\" : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }\n    }, elmTaskForm), /*#__PURE__*/React.createElement(\"div\", {\n      className: isDisplayForm === true ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8\" : \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      onClick: this.addTask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fa fa-plus mr-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 29\n      }\n    }), \"\\xA0Th\\xEAm C\\xF4ng Vi\\u1EC7c\"), \"\\xA0\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-15\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Controll, {\n      searchList: this.searchList,\n      sortBy: this.sortBy,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-15\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TaskList, {\n      changeStatus: this.changeStatus,\n      deleteTask: this.deleteTask,\n      updateItem: this.updateItem,\n      filterList: this.filterList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 33\n      }\n    }))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isDisplayForm: state.isDisplayForm\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onToggleForm: () => {\n      dispatch(actions.toggleForm());\n    },\n    onCloseForm: () => {\n      dispatch(actions.closeForm());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/Study/React/management/src/App.js"],"names":["React","Component","TaskForm","Controll","TaskList","connect","actions","App","constructor","props","addTask","onToggleForm","onShowForm","setState","isDisplayForm","changeStatus","ID","tasks","state","index","findTask","Status","localStorage","setItem","JSON","stringify","deleteTask","splice","i","length","updateItem","taskEditing","filterList","filterName","filterStatus","Filter","Name","toLowerCase","searchList","txtSearch","Keyword","sortBy","type","Sort","render","elmTaskForm","mapStateToProps","mapDispatchToProps","dispatch","toggleForm","onCloseForm","closeForm"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css'\nimport TaskForm from './components/TaskForm'\nimport Controll from './components/Controll'\nimport TaskList from './components/TaskList'\nimport {connect} from 'react-redux'\nimport * as actions from './actions/index'\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            taskEditing: null,\n            Filter: {\n                Name: '',\n                Status: -1\n            },\n            Keyword: '',\n            Sort: 0\n        };\n    }\n\n\n\n    addTask = () => {\n    \n        // if(this.state.taskEditing){\n        //     this.setState({\n        //         isDisplayForm: true,\n        //         taskEditing: null\n        //     })\n        // }else{\n        //     this.setState({\n        //         isDisplayForm: !this.state.isDisplayForm\n        //     })\n        // }\n\n        this.props.onToggleForm();\n        \n    }\n    \n    onShowForm = () => {\n        this.setState({\n            isDisplayForm: true\n        })\n    }\n\n\n    changeStatus = (ID) => {\n        var { tasks } = this.state;\n\n        var index = this.findTask(ID);\n\n        if (index !== -1) {\n            tasks[index].Status = !tasks[index].Status;\n            this.setState({\n                tasks: tasks\n            })\n\n            localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n        }\n\n    }\n\n    deleteTask = (ID) => {\n        var { tasks } = this.state;\n\n        var index = this.findTask(ID);\n\n        if (index !== -1) {\n            tasks.splice(index, 1);\n            this.setState({\n                tasks: tasks\n            })\n\n            localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n        }\n    }\n\n    findTask = (ID) => {\n        var { tasks } = this.state;\n\n        var index = -1;\n        for (var i = 0; i < tasks.length; i++) {\n            if (tasks[i].ID === ID) {\n                index = i;\n                break;\n            }\n        }\n\n        return index;\n    }\n\n    updateItem = (ID) => {\n        var { tasks } = this.state;\n\n        var index = this.findTask(ID);\n\n        if (index !== -1) {\n            this.setState({\n                taskEditing: tasks[index]\n            })\n\n            this.onShowForm();\n\n            localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n        }\n    }\n\n    filterList = (filterName, filterStatus)=>{\n        this.setState({\n            Filter: {\n                Name: filterName.toLowerCase(),\n                Status: filterStatus\n            }\n        })\n\n    }\n\n    searchList = (txtSearch)=>{\n        this.setState({\n            Keyword: txtSearch\n        })\n    }\n\n    sortBy = (type) =>{\n        this.setState({\n            Sort: type\n        })\n    }\n\n    render() {\n        var {isDisplayForm} = this.props;\n        var {Filter, Keyword, Sort } = this.state;\n\n        var elmTaskForm = isDisplayForm === true ? <TaskForm \n            task={this.state.taskEditing} /> : '';\n        // if(Filter){\n        //     tasks = tasks.filter((task)=>{\n        //         return task.Name.toLowerCase().indexOf(Filter.Name) !== -1;\n        //     })\n        //     tasks = tasks.filter((task)=>{\n        //         if(Filter.Status == -1)\n        //         {\n        //             return task;\n        //         }\n        //         else{\n        //             return task.Status === (Filter.Status == 1? true: false);\n        //         }\n        //     })\n        // }\n\n        // if(Keyword !== \"\"){\n        //     tasks = tasks.filter((task)=>{\n        //         return task.Name.toLowerCase().indexOf(Keyword) !== -1;\n        //     })\n        // }\n\n        // if(Sort !== 0){\n        //     tasks.sort((a,b)=>{\n        //         if(a.Name.toLowerCase() > b.Name.toLowerCase()) return Sort;\n        //         else if(a.Name.toLowerCase() < b.Name.toLowerCase()) return -Sort;\n        //         else return 0;\n        //     })\n        // }\n        \n        return (\n            <div className=\"container\">\n                <div className=\"text-center\">\n                    <h1>Quản Lý Công Việc</h1>\n                    <hr />\n                </div>\n                <div className=\"row\">\n                    <div className={isDisplayForm === true ? \"col-xs-4 col-sm-4 col-md-4 col-lg-4\" : \"\"}>\n                        {elmTaskForm}\n                    </div>\n                    <div className={isDisplayForm === true ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8\" : \"col-xs-12 col-sm-12 col-md-12 col-lg-12\"}>\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={this.addTask}>\n                            <span className=\"fa fa-plus mr-5\"></span>&nbsp;Thêm Công Việc\n                        </button>&nbsp;\n                        <div className=\"row mt-15\">\n                            <Controll searchList = {this.searchList} sortBy = {this.sortBy}/>\n                        </div>\n                        <div className=\"row mt-15\">\n                            <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                                <TaskList\n                                    changeStatus={this.changeStatus}\n                                    deleteTask={this.deleteTask}\n                                    updateItem={this.updateItem} \n                                    filterList={this.filterList}/>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nconst mapStateToProps = state =>{\n    return {\n        isDisplayForm: state.isDisplayForm\n    }\n}\n\nconst mapDispatchToProps = (dispatch, props) =>{\n    return {\n        onToggleForm: ()=>{\n            dispatch(actions.toggleForm());\n        },\n        onCloseForm: ()=>{\n            dispatch(actions.closeForm());\n        }\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}